call dein#add('Shougo/dein.vim')
call dein#add('haya14busa/dein-command.vim')
call dein#add('Shougo/vimproc.vim', {'build': 'make'})

let mapleader = "\<Space>"

call dein#add('vim-airline/vim-airline')
call dein#add('vim-airline/vim-airline-themes')

let g:airline_powerline_fonts=1
let g:airline_theme='solarized' " dark simple badwolf solarized solarized2
set noshowmode

call dein#add('altercation/vim-colors-solarized')

call dein#add('junegunn/fzf.vim')

if executable("ag") && ('' == $FZF_DEFAULT_COMMAND)
  let $FZF_DEFAULT_COMMAND = "ag --follow --nocolor --nogroup -g ''"
endif

set rtp+=$HOME/.fzf

nmap <leader>ff :Files<cr>
nmap <leader>l :Lines<cr>

call dein#add('python-rope/ropevim')
call dein#add('christoomey/vim-tmux-navigator')
call dein#add('Shougo/deoplete.nvim')
call dein#add('zchee/deoplete-jedi')
call dein#add('neomake/neomake')
call dein#add('tpope/vim-fugitive')
call dein#add('jreybert/vimagit')
call dein#add('Merginal')
call dein#add('airblade/vim-gitgutter')
call dein#add('gregsexton/gitv')
call dein#add('tpope/vim-sleuth')
call dein#add('tpope/vim-unimpaired')
call dein#add('tpope/vim-repeat')
call dein#add('tpope/vim-commentary')
call dein#add('tpope/vim-surround')
call dein#add('svermeulen/vim-easyclip')
call dein#add('tpope/vim-endwise')
call dein#add('tpope/vim-rsi')
call dein#add('tpope/vim-obsession')
call dein#add('rking/ag.vim')
call dein#add('Shougo/denite.nvim')
call dein#add('Shougo/neomru.vim')
call dein#add('Shougo/neoyank.vim')
call dein#add('Shougo/unite.vim')
call dein#add('Shougo/vimfiler.vim')
call dein#add('Shougo/neoinclude.vim')
call dein#add('tsukkee/unite-tag')
nmap <leader>p :VimFilerExplorer -find<cr>
let g:vimfiler_as_default_explorer = 1
call dein#add('Shougo/unite-outline')
call dein#add('ekalinin/Dockerfile.vim')
" call dein#add('tpope/vim-markdown')

if executable('ag')
  let g:unite_source_rec_async_command = ['ag', '--follow', '--nocolor', '--nogroup', '-g', '']
  set grepprg=ag\ --nogroup\ --nocolor
endif

" Unite
let g:unite_source_history_yank_enable = 1
call unite#filters#matcher_default#use(['matcher_fuzzy'])
nmap <leader>o :Denite unite:outline<cr>
nmap <leader>y :Denite unite:history/yank<cr>
nmap <leader>bb :Denite buffer<cr>

" Change file_rec command.
call denite#custom#var('file_rec', 'command',
  \ ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])

" Change mappings.
call denite#custom#map(
  \ 'insert',
  \ '<C-j>',
  \ '<denite:move_to_next_line>',
  \ 'noremap'
\)
call denite#custom#map(
  \ 'insert',
  \ '<C-k>',
  \ '<denite:move_to_previous_line>',
  \ 'noremap'
\)

call denite#custom#filter('matcher_ignore_globs', 'ignore_globs',
  \ [ '.git/', '.ropeproject/', '__pycache__/',
  \   'venv/', 'images/', '*.min.*', 'img/', 'fonts/'])

call denite#custom#alias('source', 'file_rec/git', 'file_rec')
call denite#custom#var('file_rec/git', 'command',
\ ['git', 'ls-files', '-co', '--exclude-standard'])
nnoremap <silent> <C-p> :<C-u>Denite
\ `finddir('.git', ';') != '' ? 'file_rec/git' : 'file_rec'`<CR>

nmap <leader>t :Denite -buffer-name=files file_rec<cr>
" nmap <leader>f :Unite -buffer-name=files -start-insert file<cr>
nmap <leader>r :DeniteProjectDir file_mru<cr>
nmap <leader>b :Unite -no-split -quick-match buffer<cr>
" let g:unite_split_rule = "botright"

nmap <leader>gs :Gstatus<cr>

nmap <leader>* :Ag <c-r>=expand("<cword>")<cr><cr>
nmap <leader>/ :Ag<space>     
